{"version":3,"file":"index.js","sources":["../utils/persist.js","../store/store.js","../context/StateletProvider.jsx","../hooks/index.js"],"sourcesContent":["const mergePersisitedAndInitialValues = (initialState, persistedState, whitelist = []) => {\n  let persistedJSON = {};\n  try {\n    persistedJSON = JSON.parse(persistedState);\n  } catch (err) {\n    console.error(err);\n    return initialState;\n  }\n\n  const whitelistedPersistedData = Object.keys(persistedJSON).reduce((acc, persistedKey) => {\n    if (whitelist.includes(persistedKey)) {\n      return {\n        ...acc,\n        [persistedKey]: persistedJSON[persistedKey]\n      }\n    }\n  }, {})\n\n  return { ...initialState, ...whitelistedPersistedData };\n}\n\nexport const loadPersistedState = (initialState, persistConfig) => {\n  const { key, whitelist } = persistConfig || {};\n\n  if (!key) return initialState;\n\n  const persisted = localStorage.getItem(key);\n  try {\n    return mergePersisitedAndInitialValues(initialState, persisted, whitelist)\n  } catch {\n    return initialState;\n  }\n}\n","import { loadPersistedState } from '../utils/persist';\n\nexport const createStore = (initialState, reducer, middlewares = [], persistConfig) => {\n  let state = loadPersistedState(initialState, persistConfig) || initialState;\n  const listeners = new Set();\n\n  function persistState(newState) {\n    if (!persistConfig) return;\n\n    const toPersist = persistConfig.whitelist\n      ? Object.fromEntries(\n        Object.entries(newState).filter(([key]) => persistConfig.whitelist.includes(key))\n      )\n      : newState;\n    localStorage.setItem(persistConfig.key, JSON.stringify(toPersist));\n  }\n\n  const getState = () => state;\n\n  const setState = (newState) => {\n    state = newState;\n    persistState(newState);\n    listeners.forEach((listener) => listener());\n\n  };\n\n  const dispatch = (action) => {\n    const nextState = reducer(state, action);\n    setState(nextState);\n  };\n\n  const middlewareAPI = {\n    getState,\n  };\n\n  const Mydispatch = middlewares\n    .reverse()\n    .reduce((next, mw) => {\n      return mw(middlewareAPI)(next)\n    }, dispatch)\n    ;\n\n\n  const subscribe = (listener) => {\n    listeners.add(listener);\n    return () => listeners.delete(listener);\n  };\n\n\n  return {\n    getState, subscribe, dispatch: Mydispatch\n  }\n}","import React, { createContext } from 'react';\nimport { createStore } from '../store/store';\n\nexport const StateletContext = createContext();\n\nconst StateletProvider = ({ children, value }) => {\n  const { initialState, reducer, middlewares, persistConfig } = value;\n  const store = createStore(initialState, reducer, middlewares, persistConfig);\n\n  return (\n    <StateletContext.Provider value={store}>\n      {children}\n    </StateletContext.Provider>\n  );\n};\n\nexport default StateletProvider;","import { useContext, useSyncExternalStore } from \"react\";\nimport { StateletContext } from \"../context/StateletProvider.jsx\";\n\nconst useStore = () => useContext(StateletContext);\n\nconst useStatelet = (selector) => {\n  const store = useStore();\n  return useSyncExternalStore(\n    store.subscribe,\n    () => selector(store.getState()),\n    () => selector(store.getState())\n  );\n};\n\nconst useStateletDispatch = () => {\n  const store = useStore();\n  return store.dispatch;\n};\n\nconst useCreateStateletAction = (type) => {\n  const store = useStore();\n\n  return (payload) => {\n    store.dispatch({ type, payload })\n  }\n};\n\nexport {\n  useStateletDispatch,\n  useStatelet,\n  useCreateStateletAction\n}"],"names":["mergePersisitedAndInitialValues","initialState","persistedState","whitelist","persistedJSON","JSON","parse","err","console","error","whitelistedPersistedData","Object","keys","reduce","acc","persistedKey","includes","loadPersistedState","persistConfig","key","persisted","localStorage","getItem","createStore","reducer","middlewares","state","listeners","Set","persistState","newState","toPersist","fromEntries","entries","filter","setItem","stringify","getState","setState","forEach","listener","dispatch","action","nextState","middlewareAPI","Mydispatch","reverse","next","mw","subscribe","add","delete","StateletContext","createContext","StateletProvider","children","value","store","React","createElement","Provider","useStore","useContext","useStatelet","selector","useSyncExternalStore","useStateletDispatch","useCreateStateletAction","type","payload"],"mappings":";;AAAA,MAAMA,+BAA+B,GAAGA,CAACC,YAAY,EAAEC,cAAc,EAAEC,SAAS,GAAG,EAAE,KAAK;EACxF,IAAIC,aAAa,GAAG,EAAE,CAAA;EACtB,IAAI;AACFA,IAAAA,aAAa,GAAGC,IAAI,CAACC,KAAK,CAACJ,cAAc,CAAC,CAAA;GAC3C,CAAC,OAAOK,GAAG,EAAE;AACZC,IAAAA,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC,CAAA;AAClB,IAAA,OAAON,YAAY,CAAA;AACrB,GAAA;AAEA,EAAA,MAAMS,wBAAwB,GAAGC,MAAM,CAACC,IAAI,CAACR,aAAa,CAAC,CAACS,MAAM,CAAC,CAACC,GAAG,EAAEC,YAAY,KAAK;AACxF,IAAA,IAAIZ,SAAS,CAACa,QAAQ,CAACD,YAAY,CAAC,EAAE;MACpC,OAAO;AACL,QAAA,GAAGD,GAAG;AACN,QAAA,CAACC,YAAY,GAAGX,aAAa,CAACW,YAAY,CAAA;OAC3C,CAAA;AACH,KAAA;GACD,EAAE,EAAE,CAAC,CAAA;EAEN,OAAO;AAAE,IAAA,GAAGd,YAAY;IAAE,GAAGS,wBAAAA;GAA0B,CAAA;AACzD,CAAC,CAAA;AAEM,MAAMO,kBAAkB,GAAGA,CAAChB,YAAY,EAAEiB,aAAa,KAAK;EACjE,MAAM;IAAEC,GAAG;AAAEhB,IAAAA,SAAAA;AAAU,GAAC,GAAGe,aAAa,IAAI,EAAE,CAAA;AAE9C,EAAA,IAAI,CAACC,GAAG,EAAE,OAAOlB,YAAY,CAAA;AAE7B,EAAA,MAAMmB,SAAS,GAAGC,YAAY,CAACC,OAAO,CAACH,GAAG,CAAC,CAAA;EAC3C,IAAI;AACF,IAAA,OAAOnB,+BAA+B,CAACC,YAAY,EAAEmB,SAAS,EAAEjB,SAAS,CAAC,CAAA;AAC5E,GAAC,CAAC,MAAM;AACN,IAAA,OAAOF,YAAY,CAAA;AACrB,GAAA;AACF,CAAC;;AC9BM,MAAMsB,WAAW,GAAGA,CAACtB,YAAY,EAAEuB,OAAO,EAAEC,WAAW,GAAG,EAAE,EAAEP,aAAa,KAAK;EACrF,IAAIQ,KAAK,GAAGT,kBAAkB,CAAChB,YAAY,EAAEiB,aAAa,CAAC,IAAIjB,YAAY,CAAA;AAC3E,EAAA,MAAM0B,SAAS,GAAG,IAAIC,GAAG,EAAE,CAAA;EAE3B,SAASC,YAAYA,CAACC,QAAQ,EAAE;IAC9B,IAAI,CAACZ,aAAa,EAAE,OAAA;AAEpB,IAAA,MAAMa,SAAS,GAAGb,aAAa,CAACf,SAAS,GACrCQ,MAAM,CAACqB,WAAW,CAClBrB,MAAM,CAACsB,OAAO,CAACH,QAAQ,CAAC,CAACI,MAAM,CAAC,CAAC,CAACf,GAAG,CAAC,KAAKD,aAAa,CAACf,SAAS,CAACa,QAAQ,CAACG,GAAG,CAAC,CAClF,CAAC,GACCW,QAAQ,CAAA;AACZT,IAAAA,YAAY,CAACc,OAAO,CAACjB,aAAa,CAACC,GAAG,EAAEd,IAAI,CAAC+B,SAAS,CAACL,SAAS,CAAC,CAAC,CAAA;AACpE,GAAA;AAEA,EAAA,MAAMM,QAAQ,GAAGA,MAAMX,KAAK,CAAA;EAE5B,MAAMY,QAAQ,GAAIR,QAAQ,IAAK;AAC7BJ,IAAAA,KAAK,GAAGI,QAAQ,CAAA;IAChBD,YAAY,CAACC,QAAQ,CAAC,CAAA;IACtBH,SAAS,CAACY,OAAO,CAAEC,QAAQ,IAAKA,QAAQ,EAAE,CAAC,CAAA;GAE5C,CAAA;EAED,MAAMC,QAAQ,GAAIC,MAAM,IAAK;AAC3B,IAAA,MAAMC,SAAS,GAAGnB,OAAO,CAACE,KAAK,EAAEgB,MAAM,CAAC,CAAA;IACxCJ,QAAQ,CAACK,SAAS,CAAC,CAAA;GACpB,CAAA;AAED,EAAA,MAAMC,aAAa,GAAG;AACpBP,IAAAA,QAAAA;GACD,CAAA;AAED,EAAA,MAAMQ,UAAU,GAAGpB,WAAW,CAC3BqB,OAAO,EAAE,CACTjC,MAAM,CAAC,CAACkC,IAAI,EAAEC,EAAE,KAAK;AACpB,IAAA,OAAOA,EAAE,CAACJ,aAAa,CAAC,CAACG,IAAI,CAAC,CAAA;GAC/B,EAAEN,QAAQ,CAAC,CAAA;EAId,MAAMQ,SAAS,GAAIT,QAAQ,IAAK;AAC9Bb,IAAAA,SAAS,CAACuB,GAAG,CAACV,QAAQ,CAAC,CAAA;AACvB,IAAA,OAAO,MAAMb,SAAS,CAACwB,MAAM,CAACX,QAAQ,CAAC,CAAA;GACxC,CAAA;EAGD,OAAO;IACLH,QAAQ;IAAEY,SAAS;AAAER,IAAAA,QAAQ,EAAEI,UAAAA;GAChC,CAAA;AACH,CAAC;;ACjDM,MAAMO,eAAe,gBAAGC,aAAa,EAAE,CAAA;AAExCC,MAAAA,gBAAgB,GAAGA,CAAC;EAAEC,QAAQ;AAAEC,EAAAA,KAAAA;AAAM,CAAC,KAAK;EAChD,MAAM;IAAEvD,YAAY;IAAEuB,OAAO;IAAEC,WAAW;AAAEP,IAAAA,aAAAA;AAAc,GAAC,GAAGsC,KAAK,CAAA;EACnE,MAAMC,KAAK,GAAGlC,WAAW,CAACtB,YAAY,EAAEuB,OAAO,EAAEC,WAAW,EAAEP,aAAa,CAAC,CAAA;AAE5E,EAAA,oBACEwC,KAAA,CAAAC,aAAA,CAACP,eAAe,CAACQ,QAAQ,EAAA;AAACJ,IAAAA,KAAK,EAAEC,KAAAA;AAAM,GAAA,EACpCF,QACuB,CAAC,CAAA;AAE/B;;ACXA,MAAMM,QAAQ,GAAGA,MAAMC,UAAU,CAACV,eAAe,CAAC,CAAA;AAE5CW,MAAAA,WAAW,GAAIC,QAAQ,IAAK;AAChC,EAAA,MAAMP,KAAK,GAAGI,QAAQ,EAAE,CAAA;EACxB,OAAOI,oBAAoB,CACzBR,KAAK,CAACR,SAAS,EACf,MAAMe,QAAQ,CAACP,KAAK,CAACpB,QAAQ,EAAE,CAAC,EAChC,MAAM2B,QAAQ,CAACP,KAAK,CAACpB,QAAQ,EAAE,CACjC,CAAC,CAAA;AACH,EAAC;AAEK6B,MAAAA,mBAAmB,GAAGA,MAAM;AAChC,EAAA,MAAMT,KAAK,GAAGI,QAAQ,EAAE,CAAA;EACxB,OAAOJ,KAAK,CAAChB,QAAQ,CAAA;AACvB,EAAC;AAEK0B,MAAAA,uBAAuB,GAAIC,IAAI,IAAK;AACxC,EAAA,MAAMX,KAAK,GAAGI,QAAQ,EAAE,CAAA;AAExB,EAAA,OAAQQ,OAAO,IAAK;IAClBZ,KAAK,CAAChB,QAAQ,CAAC;MAAE2B,IAAI;AAAEC,MAAAA,OAAAA;AAAQ,KAAC,CAAC,CAAA;GAClC,CAAA;AACH;;;;"}